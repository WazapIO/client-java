openapi: 3.0.1
info:
  contact:
    email: manjit@sponsorbook.io
    name: Manjit Pardeshi
  description: The V2 of WhatsAPI Go
  title: WhatsAPI Go
  version: "2.0"
servers:
- url: /api
paths:
  /instances/create:
    get:
      description: This endpoint is used to create a new WhatsApp Web instance.
      operationId: createInstance
      parameters:
      - description: Insert instance key if you want to provide custom key
        in: query
        name: instance_key
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Creates a new instance key.
      tags:
      - Instance
      x-accepts: '*/*'
  /instances/list:
    get:
      description: Fetches the list of all Instances with login status.
      operationId: listInstances
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all instances.
      tags:
      - Instance
      x-accepts: '*/*'
  /instances/{instance_key}/:
    get:
      description: Returns the instance data of single instance with connection status.
      operationId: getInstance
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get Instance.
      tags:
      - Instance
      x-accepts: '*/*'
  /instances/{instance_key}/business/catalog:
    get:
      description: Gets list of all products registered by you.
      operationId: fetchCatlog
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fetches the catlog.
      tags:
      - Business Management
      x-accepts: '*/*'
  /instances/{instance_key}/business/payment-request:
    post:
      description: Sends an payment request to a user. Feature is still in beta.
      operationId: sendPaymentRequest
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequestPayload'
        description: Data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a payment request.
      tags:
      - Business Management
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/contacts:
    get:
      description: Fetches the list of contacts in the instance.
      operationId: getContacts
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get contacts.
      tags:
      - Instance
      x-accepts: '*/*'
  /instances/{instance_key}/delete:
    delete:
      description: Deletes the instance with the provided key.
      operationId: deleteInstance
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Delete Instance.
      tags:
      - Instance
      x-accepts: '*/*'
  /instances/{instance_key}/groups/:
    get:
      description: Returns list of all groups with participants data. Set include_participants
        to false to exclude participants data.
      operationId: getAllGroups
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Include participants data
        in: query
        name: include_participants
        schema:
          default: "true"
          enum:
          - "false"
          - "true"
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all groups.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/admin:
    get:
      description: Returns list of all groups in which you are admin.
      operationId: getAdminGroups
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get admin groups.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/create:
    post:
      description: Creates a group with the participant data. The creator is automatically
        added to the group.
      operationId: createGroup
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreatePayload'
        description: Group create payload
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Create group.
      tags:
      - Group Management
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/groups/invite-info:
    get:
      description: "Gets a group info from an invite link. An invite link is a link\
        \ that can be used to join a group. It is usually in the format https://chat.whatsapp.com/{invitecode}"
      operationId: getGroupFromInviteLink
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: The invite link to check
        in: query
        name: invite_link
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get group from invite link.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/join:
    get:
      description: |-
        Joins a group with group invite link. An invite link is a link that can be used to join a group. It is usually in the format https://chat.whatsapp.com/{invitecode}
        You have to put invite_code in the url of the request. The invite code is the part after https://chat.whatsapp.com/
        For example, if the invite link is https://chat.whatsapp.com/dsfsf34r3d3dsds, then the invite code is `dsfsf34r3d3dsds“
      operationId: joinGroupWithLink
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: The invite code of group you want to join
        in: query
        name: invite_code
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Join group with invite code.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}:
    get:
      description: Fetches the group data.
      operationId: getGroup
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get group.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/:
    delete:
      description: Leaves the specified group.
      operationId: leaveGroup
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Leaves the group.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/announce:
    put:
      description: Set if non-admins are allowed to send messages in groups
      operationId: setGroupAnnounce
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Announce status
        in: path
        name: announce
        required: true
        schema:
          default: false
          enum:
          - true
          - false
          type: boolean
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Set group announce.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/description:
    put:
      description: Changes the group description
      operationId: setGroupDescription
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateDescriptionPayload'
        description: Group description data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Set group description.
      tags:
      - Group Management
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/invite-code:
    get:
      description: Gets the invite code of the group.
      operationId: getGroupInviteCode
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get group invite code.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/lock:
    put:
      description: Set if non-admins are allowed to change the group dp and other
        stuff
      operationId: setGroupLocked
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Locked status
        in: path
        name: locked
        required: true
        schema:
          default: false
          enum:
          - true
          - false
          type: boolean
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Set group locked.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/name:
    put:
      description: Changes the group name. The max limit is 22 chars
      operationId: setGroupName
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateNamePayload'
        description: Group name data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Set group name.
      tags:
      - Group Management
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/participants:
    get:
      description: Returns all participants of the group.
      operationId: getAllParticipants
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get all participants.
      tags:
      - Group Management
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/participants/add:
    post:
      description: Handles adding participants to a group. You must be admin in the
        group or the query will fail.
      operationId: addParticipant
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateParticipantsPayload'
        description: Group update payload
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Add participant.
      tags:
      - Group Management
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/participants/demote:
    put:
      description: Demotes admins in groups. You must be admin in the group or the
        query will fail.
      operationId: demoteParticipant
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateParticipantsPayload'
        description: Group update payload
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Demote participant.
      tags:
      - Group Management
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/participants/promote:
    put:
      description: Promotes participants to admin. You must be admin in the group
        or the query will fail.
      operationId: promoteParticipant
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateParticipantsPayload'
        description: Group update payload
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Promote participant.
      tags:
      - Group Management
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/participants/remove:
    delete:
      description: Handles removing participants from a group. You must be admin in
        the group or the query will fail.
      operationId: removeParticipant
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupUpdateParticipantsPayload'
        description: Group update payload
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Remove participant.
      tags:
      - Group Management
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/groups/{group_id}/profile-pic:
    put:
      description: Changes the group profile picture. Currently it only seems to accept
        JPEG images only
      operationId: setGroupPicture
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Group id of the group
        in: path
        name: group_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/setGroupPicture_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Set group picture.
      tags:
      - Group Management
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/logout:
    delete:
      description: Logouts of the instance with the provided key.
      operationId: logoutInstance
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Logout Instance.
      tags:
      - Instance
      x-accepts: '*/*'
  /instances/{instance_key}/misc/chat-presence:
    post:
      description: |-
        Sets the presence of the given chat. (Typing, Recording, Paused)
        Options: typing, recording, paused
      operationId: setChatPresence
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: JID
        in: query
        name: jid
        required: true
        schema:
          type: string
      - description: Presence
        in: query
        name: presence
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Set chat presence
      tags:
      - Miscellaneous
      x-accepts: '*/*'
  /instances/{instance_key}/misc/download:
    post:
      description: Downloads the media from the given media keys.
      operationId: downloadMedia
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: File type
        in: query
        name: file_type
        required: true
        schema:
          enum:
          - image
          - video
          - audio
          - document
          type: string
      - description: "Response type (file, base64)"
        in: query
        name: response_type
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpload'
        description: Media data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Download media
      tags:
      - Miscellaneous
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/misc/profile-pic:
    get:
      description: Returns the profile pic of the given user.
      operationId: getProfilePic
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: JID
        in: query
        name: jid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get profile pic.
      tags:
      - Miscellaneous
      x-accepts: '*/*'
    put:
      description: Changes the profile pic of the current logged in user.
      operationId: updateProfilePic
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProfilePic_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Update profile picture
      tags:
      - Miscellaneous
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/misc/user-info:
    post:
      description: Gets the user info for the given user ids. This does not checks
        if user is registered or not
      operationId: getUsersInfo
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfoPayload'
        description: Data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Fetches the users info.
      tags:
      - Miscellaneous
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/qrcode:
    get:
      description: Returns the qrcode in the base64 format.
      operationId: getQrCode
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Get QrCode.
      tags:
      - Instance
      x-accepts: '*/*'
  /instances/{instance_key}/send/audio:
    post:
      description: |-
        Sends a audio message by uploading to the WhatsApp servers every time.
        This is not recommended for bulk sending.
      operationId: sendAudio
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: The recipient's number
        in: query
        name: to
        required: true
        schema:
          type: string
      - description: Attached caption
        in: query
        name: caption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendAudio_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send raw audio.
      tags:
      - Message Sending
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/button-media:
    post:
      description: |-
        Sends an interactive button message to the given user. This message also has media header with it.
        Make sure that all the button ids are unique
      operationId: sendButtonWithMedia
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ButtonMessageWithMediaPayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a button message with a media header.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/buttons:
    post:
      description: Sends an interactive button message to the given user. Make sure
        that all the button ids are unique
      operationId: sendButtonMessage
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ButtonMessagePayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a button message.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/contact:
    post:
      description: Sends a contact (vcard) message to the given user.
      operationId: sendContact
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactMessagePayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a contact message.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/document:
    post:
      description: |-
        Sends a document message by uploading to the WhatsApp servers every time.
        This is not recommended for bulk sending.
      operationId: sendDocument
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: The recipient's number
        in: query
        name: to
        required: true
        schema:
          type: string
      - description: Attached caption
        in: query
        name: caption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendDocument_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send raw document.
      tags:
      - Message Sending
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/group-invite:
    post:
      description: |-
        Sends a group invite message to the specified number.
        Don't include "https://chat.whatsapp.com/" in the invite code.
      operationId: sendGroupInvite
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupInviteMessagePayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a group invite message
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/image:
    post:
      description: |-
        Sends a image message by uploading to the WhatsApp servers every time.
        This is not recommended for bulk sending.
      operationId: sendImage
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: The recipient's number
        in: query
        name: to
        required: true
        schema:
          type: string
      - description: Attached caption
        in: query
        name: caption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateProfilePic_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send raw image.
      tags:
      - Message Sending
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/list:
    post:
      description: Sends an interactive List message to the given user.
      operationId: sendListMessage
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListMessagePayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a List message.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/location:
    post:
      description: |-
        Sends a location message to the given user. This is static location and does not update
        Note: The Address and Url fields are optional
      operationId: sendLocation
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LocationMessagePayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a location message.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/media:
    post:
      description: Sends a media message to the given user.
      operationId: sendMediaMessage
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMediaPayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a media message.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/poll:
    post:
      description: |-
        Sends an interactive poll message to the given user.
        The poll message is a new feature that is currently in beta.
      operationId: sendPollMessage
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PollMessagePayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a Poll message.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/template:
    post:
      description: |-
        Sends an interactive template message to the given user.
        Note: The valid button types are "replyButton", "urlButton", "callButton"
      operationId: sendTemplate
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateButtonPayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a template message.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/template-media:
    post:
      description: |-
        Sends an interactive template message with a media header to the given user.
        Note: The valid button types are "replyButton", "urlButton", "callButton"
      operationId: sendTemplateWithMedia
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateButtonWithMediaPayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a template message with media.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/text:
    post:
      description: Sends a text message to the given user.
      operationId: sendTextMessage
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TextMessage'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send a text message.
      tags:
      - Message Sending
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/upload:
    post:
      description: |-
        Uploads media to WhatsApp servers and returns the media keys.
        Store the returned media keys, as you will need them to send media messages
      operationId: uploadMedia
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: Media type
        in: query
        name: type
        required: true
        schema:
          enum:
          - image
          - video
          - audio
          - document
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/uploadMedia_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Upload media.
      tags:
      - Message Sending
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/send/video:
    post:
      description: |-
        Sends a video message by uploading to the WhatsApp servers every time.
        This is not recommended for bulk sending.
      operationId: sendVideo
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      - description: The recipient's number
        in: query
        name: to
        required: true
        schema:
          type: string
      - description: Attached caption
        in: query
        name: caption
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sendVideo_request'
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Send raw video.
      tags:
      - Message Sending
      x-content-type: application/json
      x-accepts: '*/*'
  /instances/{instance_key}/webhook:
    put:
      description: Changes the webhook url of an instance.
      operationId: changeWebhookUrl
      parameters:
      - description: Instance key
        in: path
        name: instance_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookPayload'
        description: Message data
        required: true
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Success
        "400":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Bad Request
        "401":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Unauthorized
        "404":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Instance not found
        "500":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/APIResponse'
          description: Internal Server Error
      security:
      - ApiKeyAuth: []
      summary: Change Webhook url.
      tags:
      - Instance
      x-codegen-request-body-name: data
      x-content-type: application/json
      x-accepts: '*/*'
components:
  schemas:
    APIResponse:
      example:
        data: "{}"
        error: true
        message: message
        status: 0
      properties:
        data:
          type: object
        error:
          type: boolean
        message:
          type: string
        status:
          type: integer
      type: object
    ButtonMessagePayload:
      example:
        buttons:
        - button_id: button_id
          button_text: button_text
        - button_id: button_id
          button_text: button_text
        footer_text: footer_text
        header_text: header_text
        text: text
        to: to
      properties:
        buttons:
          items:
            $ref: '#/components/schemas/ReplyButton'
          type: array
        footer_text:
          type: string
        header_text:
          type: string
        text:
          type: string
        to:
          type: string
      type: object
    ButtonMessageWithMediaPayload:
      example:
        buttons:
        - button_id: button_id
          button_text: button_text
        - button_id: button_id
          button_text: button_text
        footer_text: footer_text
        text: text
        to: to
        media_data:
          direct_path: direct_path
          mime_type: mime_type
          file_enc_sha256:
          - 0
          - 0
          file_length: 6
          file_sha256:
          - 1
          - 1
          media_key:
          - 5
          - 5
          url: url
      properties:
        buttons:
          items:
            $ref: '#/components/schemas/ReplyButton'
          type: array
        footer_text:
          type: string
        media_data:
          $ref: '#/components/schemas/FileUpload'
        text:
          type: string
        to:
          type: string
      type: object
    ContactMessagePayload:
      example:
        to: to
        vcard:
          full_name: full_name
          phone: phone
          organization: organization
      properties:
        to:
          type: string
        vcard:
          $ref: '#/components/schemas/ContactMessagePayload_vcard'
      required:
      - to
      - vcard
      type: object
    FileUpload:
      example:
        direct_path: direct_path
        mime_type: mime_type
        file_enc_sha256:
        - 0
        - 0
        file_length: 6
        file_sha256:
        - 1
        - 1
        media_key:
        - 5
        - 5
        url: url
      properties:
        direct_path:
          type: string
        file_enc_sha256:
          items:
            type: integer
          type: array
        file_length:
          type: integer
        file_sha256:
          items:
            type: integer
          type: array
        media_key:
          items:
            type: integer
          type: array
        mime_type:
          type: string
        url:
          type: string
      required:
      - direct_path
      - file_enc_sha256
      - file_length
      - file_sha256
      - media_key
      - mime_type
      - url
      type: object
    GroupCreatePayload:
      example:
        group_name: group_name
        participants:
        - participants
        - participants
      properties:
        group_name:
          type: string
        participants:
          items:
            type: string
          type: array
      type: object
    GroupInviteMessagePayload:
      example:
        expiry_minutes: 0
        caption: caption
        invite_code: invite_code
        to: to
      properties:
        caption:
          type: string
        expiry_minutes:
          type: integer
        invite_code:
          type: string
        to:
          type: string
      type: object
    GroupUpdateDescriptionPayload:
      example:
        description: description
      properties:
        description:
          type: string
      type: object
    GroupUpdateNamePayload:
      example:
        name: name
      properties:
        name:
          type: string
      type: object
    GroupUpdateParticipantsPayload:
      example:
        participants:
        - participants
        - participants
      properties:
        participants:
          items:
            type: string
          type: array
      type: object
    ListItem:
      example:
        description: description
        row_id: row_id
        title: title
      properties:
        description:
          type: string
        row_id:
          type: string
        title:
          type: string
      required:
      - title
      type: object
    ListMessagePayload:
      example:
        multi_select: true
        description: description
        button_text: button_text
        text: text
        to: to
        title: title
        sections:
        - rows:
          - description: description
            row_id: row_id
            title: title
          - description: description
            row_id: row_id
            title: title
          title: title
        - rows:
          - description: description
            row_id: row_id
            title: title
          - description: description
            row_id: row_id
            title: title
          title: title
      properties:
        button_text:
          type: string
        description:
          type: string
        multi_select:
          type: boolean
        sections:
          items:
            $ref: '#/components/schemas/ListSection'
          type: array
        text:
          type: string
        title:
          type: string
        to:
          type: string
      required:
      - sections
      - to
      type: object
    ListSection:
      example:
        rows:
        - description: description
          row_id: row_id
          title: title
        - description: description
          row_id: row_id
          title: title
        title: title
      properties:
        rows:
          items:
            $ref: '#/components/schemas/ListItem'
          type: array
        title:
          type: string
      required:
      - rows
      - title
      type: object
    LocationMessagePayload:
      example:
        location:
          address: address
          latitude: 0.8008281904610115
          name: name
          longitude: 6.027456183070403
        to: to
        url: url
      properties:
        location:
          $ref: '#/components/schemas/LocationMessagePayload_location'
        to:
          type: string
        url:
          type: string
      required:
      - location
      - to
      type: object
    PaymentRequestPayload:
      example:
        amount: 0
        expiry_minutes: 6
        currency: currency
        to: to
      properties:
        amount:
          type: integer
        currency:
          type: string
        expiry_minutes:
          type: integer
        to:
          type: string
      type: object
    PollMessagePayload:
      example:
        options:
        - options
        - options
        selectable_options_count: 0
        to: to
        title: title
      properties:
        options:
          items:
            type: string
          type: array
        selectable_options_count:
          type: integer
        title:
          type: string
        to:
          type: string
      required:
      - options
      - selectable_options_count
      - title
      - to
      type: object
    ReplyButton:
      example:
        button_id: button_id
        button_text: button_text
      properties:
        button_id:
          type: string
        button_text:
          type: string
      type: object
    SendMediaPayload:
      example:
        filename: filename
        media_type: media_type
        caption: caption
        to: to
        media_data:
          direct_path: direct_path
          mime_type: mime_type
          file_enc_sha256:
          - 0
          - 0
          file_length: 6
          file_sha256:
          - 1
          - 1
          media_key:
          - 5
          - 5
          url: url
      properties:
        caption:
          type: string
        filename:
          type: string
        media_data:
          $ref: '#/components/schemas/FileUpload'
        media_type:
          type: string
        to:
          type: string
      required:
      - media_data
      - media_type
      - to
      type: object
    TemplateButton:
      example:
        payload: payload
        button_id: button_id
        title: title
        type: type
      properties:
        button_id:
          description: Make sure this is unique
          type: string
        payload:
          type: string
        title:
          type: string
        type:
          description: "Valid types are replyButton, urlButton & callButton"
          type: string
      required:
      - title
      - type
      type: object
    TemplateButtonPayload:
      example:
        buttons:
        - payload: payload
          button_id: button_id
          title: title
          type: type
        - payload: payload
          button_id: button_id
          title: title
          type: type
        footer: footer
        content_text: content_text
        header: header
        to: to
      properties:
        buttons:
          items:
            $ref: '#/components/schemas/TemplateButton'
          type: array
        content_text:
          type: string
        footer:
          type: string
        header:
          type: string
        to:
          type: string
      required:
      - buttons
      - to
      type: object
    TemplateButtonWithMediaPayload:
      example:
        buttons:
        - payload: payload
          button_id: button_id
          title: title
          type: type
        - payload: payload
          button_id: button_id
          title: title
          type: type
        footer: footer
        content_text: content_text
        media:
          direct_path: direct_path
          mime_type: mime_type
          file_enc_sha256:
          - 0
          - 0
          file_length: 6
          file_sha256:
          - 1
          - 1
          media_key:
          - 5
          - 5
          url: url
        to: to
      properties:
        buttons:
          items:
            $ref: '#/components/schemas/TemplateButton'
          type: array
        content_text:
          type: string
        footer:
          type: string
        media:
          $ref: '#/components/schemas/FileUpload'
        to:
          type: string
      required:
      - buttons
      - media
      - to
      type: object
    TextMessage:
      example:
        text: text
        to: to
      properties:
        text:
          type: string
        to:
          type: string
      required:
      - text
      - to
      type: object
    UserInfoPayload:
      example:
        user_ids:
        - user_ids
        - user_ids
      properties:
        user_ids:
          items:
            type: string
          type: array
      required:
      - user_ids
      type: object
    WebhookPayload:
      example:
        webhook_url: webhook_url
      properties:
        webhook_url:
          type: string
      type: object
    setGroupPicture_request:
      properties:
        file:
          description: Group picture in JPEG
          format: binary
          type: string
      required:
      - file
      type: object
    updateProfilePic_request:
      properties:
        file:
          description: Image file
          format: binary
          type: string
      required:
      - file
      type: object
    sendAudio_request:
      properties:
        file:
          description: Audio file
          format: binary
          type: string
      required:
      - file
      type: object
    sendDocument_request:
      properties:
        file:
          description: Document file
          format: binary
          type: string
      required:
      - file
      type: object
    uploadMedia_request:
      properties:
        file:
          description: Media file
          format: binary
          type: string
      required:
      - file
      type: object
    sendVideo_request:
      properties:
        file:
          description: Video file
          format: binary
          type: string
      required:
      - file
      type: object
    ContactMessagePayload_vcard:
      example:
        full_name: full_name
        phone: phone
        organization: organization
      properties:
        full_name:
          type: string
        organization:
          type: string
        phone:
          type: string
      type: object
    LocationMessagePayload_location:
      example:
        address: address
        latitude: 0.8008281904610115
        name: name
        longitude: 6.027456183070403
      properties:
        address:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        name:
          type: string
      required:
      - latitude
      - longitude
      - name
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"

